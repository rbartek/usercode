/**
    @file treeReader.h

    @brief This file is automatically generated from ROOT file /home/hep/wilken/CMSSW_5_3_3_patch2/src/VHbbAnalysis/VHbbDataFormats/bin/AdddedRootFiles/ZH_ZToLL_125HToBB.root
    on Mon Dec 17 10:03:34 UTC 2012 by the script createReader.py.

    @warning
    Users may need to edit the content of this file to fit their needs.

    @date Mon Dec 17 10:03:34 UTC 2012

    $Id: treeReader.h,v 1.7 2010/09/29 15:13:07 haryo Exp $
 */


#ifndef treeReader_treeReader_h
#define treeReader_treeReader_h


#include<haryo/RootTreeReader/interface/RootTreeReader.h>
#include<UserCode/wilken/interface/tree.h>


/**
    @class treeReader

    @brief An interface to analyze ROOT file(s) containing tree,
    derived from the RootTreeReader and tree.
    This class is automatically generated from ROOT file /home/hep/wilken/CMSSW_5_3_3_patch2/src/VHbbAnalysis/VHbbDataFormats/bin/AdddedRootFiles/ZH_ZToLL_125HToBB.root
    on Mon Dec 17 10:03:34 UTC 2012 by the script createReader.py.
    Users may need to edit the content of this class to fit their needs.
    See also the documentation of RootTreeReader class.

    @date Mon Dec 17 10:03:34 UTC 2012

    $Id: treeReader.h,v 1.7 2010/09/29 15:13:07 haryo Exp $
 */
class treeReader:
public RootTreeReader<tree>
{
public:

    /**
       Constructor using input filename.
       Input filename can either be a ROOT file or an ASCII file
       which contains a list of ROOT file, with one ROOT file per line.
       Initialize the tree structure and read tree event(s)
       from ROOT file(s)

       @param inputFile Input file.

       @param treeName The name of the tree to be processed.  If the
       tree is located under a directory, then the name should contain the
       directory name.  See the documentation for the ROOT
       <a href=http://root.cern.ch/root/html/TChain.html>TChain</a> class.
    */
    treeReader(std::string inputFile,
                   std::string treeName);

    /**
       Constructor using input filename.
       Input filename can either be a ROOT file or an ASCII file
       which contains a list of ROOT file, with one ROOT file per line.
       Initialize the tree structure and read tree event(s)
       from ROOT file(s)

       @param inputFile Input file.

       @param directoryName Name of directory in the ROOT file(s)
       under which the tree is located.

       @param treeName Name of the tree in the ROOT file(s).
    */
    treeReader(std::string inputFile,
                   std::string directoryName,
                   std::string treeName);
    /**
       Destructor.
     */

    ~treeReader();

    /**
       Initialize the tree structure.
     */
    void    initTree();


protected:

    // List of branches.
    TBranch*        b_H;
    TBranch*        b_V;
    TBranch*        b_FatH;
    TBranch*        b_lheV_pt;
    TBranch*        b_lheHT;
    TBranch*        b_lheNj;
    TBranch*        b_genZ;
    TBranch*        b_genZstar;
    TBranch*        b_genW;
    TBranch*        b_genWstar;
    TBranch*        b_genH;
    TBranch*        b_genB;
    TBranch*        b_genBbar;
    TBranch*        b_genTop;
    TBranch*        b_genTbar;
    TBranch*        b_TkSharing;
    TBranch*        b_nhJets;
    TBranch*        b_nfathFilterJets;
    TBranch*        b_naJets;
    TBranch*        b_hJet_pt;
    TBranch*        b_hJet_eta;
    TBranch*        b_hJet_phi;
    TBranch*        b_hJet_e;
    TBranch*        b_hJet_csv;
    TBranch*        b_hJet_csv_nominal;
    TBranch*        b_hJet_csv_upBC;
    TBranch*        b_hJet_csv_downBC;
    TBranch*        b_hJet_csv_upL;
    TBranch*        b_hJet_csv_downL;
    TBranch*        b_hJet_csv_nominal4p;
    TBranch*        b_hJet_csv_upBC4p;
    TBranch*        b_hJet_csv_downBC4p;
    TBranch*        b_hJet_csvivf;
    TBranch*        b_hJet_cmva;
    TBranch*        b_hJet_cosTheta;
    TBranch*        b_hJet_numTracksSV;
    TBranch*        b_hJet_chf;
    TBranch*        b_hJet_nhf;
    TBranch*        b_hJet_cef;
    TBranch*        b_hJet_nef;
    TBranch*        b_hJet_nch;
    TBranch*        b_hJet_nconstituents;
    TBranch*        b_hJet_flavour;
    TBranch*        b_hJet_isSemiLept;
    TBranch*        b_hJet_isSemiLeptMCtruth;
    TBranch*        b_hJet_SoftLeptpdgId;
    TBranch*        b_hJet_SoftLeptIdlooseMu;
    TBranch*        b_hJet_SoftLeptId95;
    TBranch*        b_hJet_SoftLeptPt;
    TBranch*        b_hJet_SoftLeptdR;
    TBranch*        b_hJet_SoftLeptptRel;
    TBranch*        b_hJet_SoftLeptRelCombIso;
    TBranch*        b_hJet_genPt;
    TBranch*        b_hJet_genEta;
    TBranch*        b_hJet_genPhi;
    TBranch*        b_hJet_JECUnc;
    TBranch*        b_hJet_vtxMass;
    TBranch*        b_hJet_vtxPt;
    TBranch*        b_hJet_vtxEta;
    TBranch*        b_hJet_vtxPhi;
    TBranch*        b_hJet_vtxE;
    TBranch*        b_hJet_vtx3dL;
    TBranch*        b_hJet_vtx3deL;
    TBranch*        b_hJet_id;
    TBranch*        b_hJet_SF_CSVL;
    TBranch*        b_hJet_SF_CSVM;
    TBranch*        b_hJet_SF_CSVT;
    TBranch*        b_hJet_SF_CSVLerr;
    TBranch*        b_hJet_SF_CSVMerr;
    TBranch*        b_hJet_SF_CSVTerr;
    TBranch*        b_hJet_ptRaw;
    TBranch*        b_hJet_ptLeadTrack;
    TBranch*        b_hJet_puJetIdL;
    TBranch*        b_hJet_puJetIdM;
    TBranch*        b_hJet_puJetIdT;
    TBranch*        b_hJet_puJetIdMva;
    TBranch*        b_hJet_charge;
    TBranch*        b_fathFilterJets_pt;
    TBranch*        b_fathFilterJets_eta;
    TBranch*        b_fathFilterJets_phi;
    TBranch*        b_fathFilterJets_e;
    TBranch*        b_fathFilterJets_csv;
    TBranch*        b_fathFilterJets_chf;
    TBranch*        b_fathFilterJets_ptRaw;
    TBranch*        b_fathFilterJets_ptLeadTrack;
    TBranch*        b_fathFilterJets_flavour;
    TBranch*        b_fathFilterJets_isSemiLept;
    TBranch*        b_fathFilterJets_isSemiLeptMCtruth;
    TBranch*        b_fathFilterJets_genPt;
    TBranch*        b_fathFilterJets_genEta;
    TBranch*        b_fathFilterJets_genPhi;
    TBranch*        b_fathFilterJets_vtxMass;
    TBranch*        b_fathFilterJets_vtx3dL;
    TBranch*        b_fathFilterJets_vtx3deL;
    TBranch*        b_fathFilterJets_vtxPt;
    TBranch*        b_fathFilterJets_vtxEta;
    TBranch*        b_fathFilterJets_vtxPhi;
    TBranch*        b_fathFilterJets_vtxE;
    TBranch*        b_fathFilterJets_csvivf;
    TBranch*        b_fathFilterJets_cmva;
    TBranch*        b_fathFilterJets_cosTheta;
    TBranch*        b_fathFilterJets_jetArea;
    TBranch*        b_aJet_pt;
    TBranch*        b_aJet_eta;
    TBranch*        b_aJet_phi;
    TBranch*        b_aJet_e;
    TBranch*        b_aJet_csv;
    TBranch*        b_aJet_csv_nominal;
    TBranch*        b_aJet_csv_upBC;
    TBranch*        b_aJet_csv_downBC;
    TBranch*        b_aJet_csv_upL;
    TBranch*        b_aJet_csv_downL;
    TBranch*        b_aJet_csv_nominal4p;
    TBranch*        b_aJet_csv_upBC4p;
    TBranch*        b_aJet_csv_downBC4p;
    TBranch*        b_aJet_csvivf;
    TBranch*        b_aJet_cmva;
    TBranch*        b_aJet_cosTheta;
    TBranch*        b_aJet_numTracksSV;
    TBranch*        b_aJet_chf;
    TBranch*        b_aJet_nhf;
    TBranch*        b_aJet_cef;
    TBranch*        b_aJet_nef;
    TBranch*        b_aJet_nch;
    TBranch*        b_aJet_nconstituents;
    TBranch*        b_aJet_flavour;
    TBranch*        b_aJet_isSemiLept;
    TBranch*        b_aJet_isSemiLeptMCtruth;
    TBranch*        b_aJet_SoftLeptpdgId;
    TBranch*        b_aJet_SoftLeptIdlooseMu;
    TBranch*        b_aJet_SoftLeptId95;
    TBranch*        b_aJet_SoftLeptPt;
    TBranch*        b_aJet_SoftLeptdR;
    TBranch*        b_aJet_SoftLeptptRel;
    TBranch*        b_aJet_SoftLeptRelCombIso;
    TBranch*        b_aJet_puJetIdL;
    TBranch*        b_aJet_puJetIdM;
    TBranch*        b_aJet_puJetIdT;
    TBranch*        b_aJet_puJetIdMva;
    TBranch*        b_aJet_charge;
    TBranch*        b_aJet_genPt;
    TBranch*        b_aJet_genEta;
    TBranch*        b_aJet_genPhi;
    TBranch*        b_aJet_JECUnc;
    TBranch*        b_aJet_vtxMass;
    TBranch*        b_aJet_vtx3dL;
    TBranch*        b_aJet_vtx3deL;
    TBranch*        b_aJet_id;
    TBranch*        b_aJet_SF_CSVL;
    TBranch*        b_aJet_SF_CSVM;
    TBranch*        b_aJet_SF_CSVT;
    TBranch*        b_aJet_SF_CSVLerr;
    TBranch*        b_aJet_SF_CSVMerr;
    TBranch*        b_aJet_SF_CSVTerr;
    TBranch*        b_naJetsFat;
    TBranch*        b_aJetFat_pt;
    TBranch*        b_aJetFat_eta;
    TBranch*        b_aJetFat_phi;
    TBranch*        b_aJetFat_e;
    TBranch*        b_aJetFat_csv;
    TBranch*        b_numJets;
    TBranch*        b_numBJets;
    TBranch*        b_deltaPullAngle;
    TBranch*        b_deltaPullAngle2;
    TBranch*        b_gendrcc;
    TBranch*        b_gendrbb;
    TBranch*        b_genZpt;
    TBranch*        b_genWpt;
    TBranch*        b_genHpt;
    TBranch*        b_weightTrig;
    TBranch*        b_weightTrigMay;
    TBranch*        b_weightTrigV4;
    TBranch*        b_weightTrigMET;
    TBranch*        b_weightTrigOrMu30;
    TBranch*        b_weightEleRecoAndId;
    TBranch*        b_weightEleTrigJetMETPart;
    TBranch*        b_weightEleTrigElePart;
    TBranch*        b_weightEleTrigEleAugPart;
    TBranch*        b_weightTrigMET80;
    TBranch*        b_weightTrigMET100;
    TBranch*        b_weightTrig2CJet20;
    TBranch*        b_weightTrigMET150;
    TBranch*        b_weightTrigMET802CJet;
    TBranch*        b_weightTrigMET1002CJet;
    TBranch*        b_weightTrigMETLP;
    TBranch*        b_weightTrig2012A;
    TBranch*        b_weightTrig2012ADiMuon;
    TBranch*        b_weightTrig2012ADiEle;
    TBranch*        b_weightTrig2012ASingleMuon;
    TBranch*        b_weightTrig2012ASingleEle;
    TBranch*        b_weightTrig2012AMuonPlusWCandPt;
    TBranch*        b_weightTrig2012;
    TBranch*        b_weightTrig2012DiMuon;
    TBranch*        b_weightTrig2012DiEle;
    TBranch*        b_weightTrig2012SingleMuon;
    TBranch*        b_weightTrig2012SingleEle;
    TBranch*        b_weightTrig2012MuonPlusWCandPt;
    TBranch*        b_weightTrig2012AB;
    TBranch*        b_weightTrig2012ABDiMuon;
    TBranch*        b_weightTrig2012ABDiEle;
    TBranch*        b_weightTrig2012ABSingleMuon;
    TBranch*        b_weightTrig2012ABSingleEle;
    TBranch*        b_weightTrig2012ABMuonPlusWCandPt;
    TBranch*        b_weightTrig2012DiJet30MHT80;
    TBranch*        b_weightTrig2012PFMET150;
    TBranch*        b_weightTrig2012SumpT100MET100;
    TBranch*        b_weightTrig2012APFMET150orDiJetMET;
    TBranch*        b_weightTrig2012BPFMET150orDiJetMET;
    TBranch*        b_weightTrig2012CPFMET150orDiJetMET;
    TBranch*        b_deltaPullAngleAK7;
    TBranch*        b_deltaPullAngle2AK7;
    TBranch*        b_PU0;
    TBranch*        b_PUm1;
    TBranch*        b_PUp1;
    TBranch*        b_PUweight;
    TBranch*        b_PUweight2011B;
    TBranch*        b_PUweight1DObs;
    TBranch*        b_eventFlav;
    TBranch*        b_Vtype;
    TBranch*        b_HVdPhi;
    TBranch*        b_HVMass;
    TBranch*        b_HMETdPhi;
    TBranch*        b_VMt;
    TBranch*        b_VMtmu;
    TBranch*        b_VMte;
    TBranch*        b_nvlep;
    TBranch*        b_nalep;
    TBranch*        b_vLepton_mass;
    TBranch*        b_vLepton_pt;
    TBranch*        b_vLepton_eta;
    TBranch*        b_vLepton_phi;
    TBranch*        b_vLepton_aodCombRelIso;
    TBranch*        b_vLepton_pfCombRelIso;
    TBranch*        b_vLepton_photonIso;
    TBranch*        b_vLepton_neutralHadIso;
    TBranch*        b_vLepton_chargedHadIso;
    TBranch*        b_vLepton_chargedPUIso;
    TBranch*        b_vLepton_particleIso;
    TBranch*        b_vLepton_dxy;
    TBranch*        b_vLepton_dz;
    TBranch*        b_vLepton_type;
    TBranch*        b_vLepton_id80;
    TBranch*        b_vLepton_id95;
    TBranch*        b_vLepton_vbtf;
    TBranch*        b_vLepton_id80NoIso;
    TBranch*        b_vLepton_genPt;
    TBranch*        b_vLepton_genEta;
    TBranch*        b_vLepton_genPhi;
    TBranch*        b_vLepton_charge;
    TBranch*        b_vLepton_acop;
    TBranch*        b_vLepton_pfCorrIso;
    TBranch*        b_vLepton_id2012tight;
    TBranch*        b_vLepton_idMVAnotrig;
    TBranch*        b_vLepton_idMVAtrig;
    TBranch*        b_vLepton_idMVApresel;
    TBranch*        b_vLepton_innerHits;
    TBranch*        b_vLepton_photonIsoDoubleCount;
    TBranch*        b_vLepton_wpHWW;
    TBranch*        b_vLepton_wp95;
    TBranch*        b_vLepton_wp90;
    TBranch*        b_vLepton_wp85;
    TBranch*        b_vLepton_wp80;
    TBranch*        b_vLepton_wp70;
    TBranch*        b_aLepton_mass;
    TBranch*        b_aLepton_pt;
    TBranch*        b_aLepton_eta;
    TBranch*        b_aLepton_phi;
    TBranch*        b_aLepton_aodCombRelIso;
    TBranch*        b_aLepton_pfCombRelIso;
    TBranch*        b_aLepton_photonIso;
    TBranch*        b_aLepton_neutralHadIso;
    TBranch*        b_aLepton_chargedHadIso;
    TBranch*        b_aLepton_chargedPUIso;
    TBranch*        b_aLepton_particleIso;
    TBranch*        b_aLepton_dxy;
    TBranch*        b_aLepton_dz;
    TBranch*        b_aLepton_type;
    TBranch*        b_aLepton_id80;
    TBranch*        b_aLepton_id95;
    TBranch*        b_aLepton_vbtf;
    TBranch*        b_aLepton_id80NoIso;
    TBranch*        b_aLepton_genPt;
    TBranch*        b_aLepton_genEta;
    TBranch*        b_aLepton_genPhi;
    TBranch*        b_aLepton_charge;
    TBranch*        b_aLepton_acop;
    TBranch*        b_aLepton_pfCorrIso;
    TBranch*        b_aLepton_id2012tight;
    TBranch*        b_aLepton_idMVAnotrig;
    TBranch*        b_aLepton_idMVAtrig;
    TBranch*        b_aLepton_idMVApresel;
    TBranch*        b_aLepton_innerHits;
    TBranch*        b_aLepton_photonIsoDoubleCount;
    TBranch*        b_aLepton_wpHWW;
    TBranch*        b_aLepton_wp95;
    TBranch*        b_aLepton_wp90;
    TBranch*        b_aLepton_wp85;
    TBranch*        b_aLepton_wp80;
    TBranch*        b_aLepton_wp70;
    TBranch*        b_top;
    TBranch*        b_WplusMode;
    TBranch*        b_WminusMode;
    TBranch*        b_nSvs;
    TBranch*        b_Sv_massBCand;
    TBranch*        b_Sv_massSv;
    TBranch*        b_Sv_pt;
    TBranch*        b_Sv_eta;
    TBranch*        b_Sv_phi;
    TBranch*        b_Sv_dist3D;
    TBranch*        b_Sv_dist2D;
    TBranch*        b_Sv_distSim2D;
    TBranch*        b_Sv_distSig3D;
    TBranch*        b_Sv_dist3D_norm;
    TBranch*        b_SVH;
    TBranch*        b_nSimBs;
    TBranch*        b_SimBs_mass;
    TBranch*        b_SimBs_pt;
    TBranch*        b_SimBs_eta;
    TBranch*        b_SimBs_phi;
    TBranch*        b_SimBs_vtx_x;
    TBranch*        b_SimBs_vtx_y;
    TBranch*        b_SimBs_vtx_z;
    TBranch*        b_SimBs_pdgId;
    TBranch*        b_SimBs_status;
    TBranch*        b_SimBsH;
    TBranch*        b_rho;
    TBranch*        b_rho25;
    TBranch*        b_rhoN;
    TBranch*        b_nPVs;
    TBranch*        b_METnoPU;
    TBranch*        b_METnoPUCh;
    TBranch*        b_MET;
    TBranch*        b_METtype1corr;
    TBranch*        b_METtype1p2corr;
    TBranch*        b_METnoPUtype1corr;
    TBranch*        b_METnoPUtype1p2corr;
    TBranch*        b_et;
    TBranch*        b_phi;
    TBranch*        b_sumet;
    TBranch*        b_fakeMET;
    TBranch*        b_MHT;
    TBranch*        b_minDeltaPhijetMET;
    TBranch*        b_minDeltaPhijetMETZtau;
    TBranch*        b_jetPt_minDeltaPhijetMET;
    TBranch*        b_CovMartixfirst;
    TBranch*        b_CovMartixsecond;
    TBranch*        b_CovMatrixCorrelation;
    TBranch*        b_svmass;
    TBranch*        b_PzetaVis;
    TBranch*        b_PzetaMiss;
    TBranch*        b_Pzeta25;
    TBranch*        b_Pzeta45;
    TBranch*        b_Pzeta65;
    TBranch*        b_Pzeta85;
    TBranch*        b_triggerFlags;
    TBranch*        b_EVENT;
    TBranch*        b_hbhe;
    TBranch*        b_totalKinematics;
    TBranch*        b_ecalFlag;
    TBranch*        b_cschaloFlag;
    TBranch*        b_hcallaserFlag;
    TBranch*        b_trackingfailureFlag;
    TBranch*        b_eebadscFlag;
    TBranch*        b_btag1TSF;
    TBranch*        b_btag2TSF;
    TBranch*        b_btag1T2CSF;
    TBranch*        b_btag2CSF;
    TBranch*        b_btagA0CSF;
    TBranch*        b_btagA0TSF;
    TBranch*        b_btag1TA1C;
    TBranch*        b_vLepton_decayModeFinding;
    TBranch*        b_vLepton_byLooseCombinedIsolationDeltaBetaCorr;
    TBranch*        b_vLepton_againstMuonTight;
    TBranch*        b_vLepton_againstElectronLoose;
    TBranch*        b_vLepton_againstElectronMedium;
    TBranch*        b_vLepton_againstElectronMVA;
    TBranch*        b_vLepton_NsignalPFChargedHadrCands;
    TBranch*        b_vLepton_NsignalPFGammaCands;
    TBranch*        b_vLepton_leadPFChargedHadrCandPt;
    TBranch*        b_vLepton_byLooseIsolation;
    TBranch*        b_vLepton_byMediumIsolation;
    TBranch*        b_vLepton_byTightIsolation;
    TBranch*        b_aLepton_decayModeFinding;
    TBranch*        b_aLepton_byLooseCombinedIsolationDeltaBetaCorr;
    TBranch*        b_aLepton_againstMuonTight;
    TBranch*        b_aLepton_againstElectronLoose;
    TBranch*        b_aLepton_againstElectronMedium;
    TBranch*        b_aLepton_againstElectronMVA;
    TBranch*        b_aLepton_NsignalPFChargedHadrCands;
    TBranch*        b_aLepton_NsignalPFGammaCands;
    TBranch*        b_aLepton_leadPFChargedHadrCandPt;
    TBranch*        b_aLepton_byLooseIsolation;
    TBranch*        b_aLepton_byMediumIsolation;
    TBranch*        b_aLepton_byTightIsolation;
    TBranch*        b_aJet_selectedTauDR;
    TBranch*        b_tauPlusMode;
    TBranch*        b_tauMinusMode;
    TBranch*        b_isMostlyGarbage;

};

#endif
